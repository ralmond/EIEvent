[
{
  comment: "What happends when bounciness boxe unchecked.",
  state: {
    uid: "Test0",
    context: "25",
    timers:{},
    flags:{
      BouncinessOn: true
    },
    observables:{
      BouncinessRun:false
    }
  },
  event: {
            app:"https://epls.coe.fsu.edu/PPTest",
            uid: "Test0",
            verb: "adjusted",
            object: "control",
            context: "25",
            timestamp:"2018-09-25 12:12:28 EDT",   
            data: {
      gemeObjectType: "Bounciness",
      oldValue: 0.8,
      newValue: 0,
      method: "input"
    }
  },
  rule: {
    name: "Bounciness Off"
    doc: "When player unchecks bounciness, clear flag."
    verb: "adjusted",
    object: "control",
    context: "Manipulation Levels",
    ruleType: "Status",
    priority: 2,
    conditions: {
        gemeObject: "Bounciness"
        newValue: 0
    },
    predicate: {
      !set:{state.flags.BouncinessOn:false},
    }
  },
  result:{
    uid: "Test0",
    context: "25",
    timers:{},
    flags:{
      BouncinessOn: false
    },
    observables:{
      BouncinessRun: false
    }
  }
},
{
  comment: "What happends when bounciness box checked.",
  state: {
      uid: "Test0",
      context: "25",
      timers:{},
      flags:{
          BouncinessOn: false
      },
      observables:{
          BouncinessRun:false
    }
  },
  event: {
            app:"https://epls.coe.fsu.edu/PPTest",
            uid: "Test0",
            verb: "adjusted",
            object: "control",
            context: "25",
            timestamp:"2018-09-25 12:12:28 EDT",   
            data: {
                gemeObjectType: "Bounciness",
                oldValue: 0,
                newValue: 0.8,
                method: "input"
            }
  },
  rule: {
    name: "Bounciness On"
    doc: "When player checks bounciness, set flag."
    verb: "adjusted",
    object: "control",
    context: "Manipulation Levels",
    ruleType: "Status",
    priority: 2,
    conditions: {
        gemeObject: "Bounciness"
        newValue: 0.8
    },
    predicate: {
      !set:{state.flags.BouncinessOn:true},
    }
  },
  result:{
    uid: "Test0",
    context: "25",
    timers:{},
    flags:{
      BouncinessOn: true
    },
    observables:{
      BouncinessRun: false
    }
  }
},
{
  comment: "What happends when Run pressed.",
  state: {
    uid: "Test0",
    context: "25",
    timers:{},
    flags:{
      BouncinessOn: true
    },
    observables:{
      BouncinessRun: false
    }
  },
  event: {
            app:"https://epls.coe.fsu.edu/PPTest",
            uid: "Test0",
            verb: "play",
            object: "params",
            context: "25",
            timestamp:"2018-09-25 12:13:28 EDT",   
            data: {
            }
  },
  rule: {
    name: "Bouncy Run Check."
    doc: "Set the bounciness observable if bounciness flag is set."
    verb: "Bounciness",
    object: "control",
    context: "Manipulation Levels",
    ruleType: "Observable",
    priority: 5,
    conditions: {
      state.flags.BouncinessOn:true
    },
    predicate: {
      !set:{
        state.Observables.BouncinessRun:true,
      }
    }
  },
  result:{
    uid: "Test0",
    context: "Bounciness",
    timers:{},
   flags:{
       BouncinessOn:true
    },
    observables:{
        BouncinessRun:true
    } 
  }
}
]
